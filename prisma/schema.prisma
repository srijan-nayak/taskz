generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  name     String
  password String

  createdOrgs Organization[]
  memberships Membership[]
  invitations Invitations[]
}

model Organization {
  id          String   @id @default(cuid())
  name        String
  createdById String
  createdAt   DateTime @default(now())

  createdBy User          @relation(fields: [createdById], references: [id])
  members   Membership[]
  invited   Invitations[]
}

model Membership {
  id             String @id @default(cuid())
  userId         String
  organizationId String
  role           Role   @default(MEMBER)

  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([userId, organizationId])
}

enum Role {
  OWNER
  ADMIN
  MEMBER
}

model Invitations {
  id             String       @id @default(cuid())
  organizationId String
  userId         String
  status         InviteStatus @default(TENTATIVE)
  createdAt      DateTime     @default(now())

  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  
  @@unique([userId, organizationId])
}

enum InviteStatus {
  ACCEPTED
  REJECTED
  TENTATIVE
}
