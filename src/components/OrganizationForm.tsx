"use client";

import {
  Field,
  FieldDescription,
  FieldError,
  FieldGroup,
  FieldLabel,
  FieldSet,
} from "@/components/ui/field";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { OrganizationFormState } from "@/lib/definitions/organization";

export default function OrganizationForm({
  state,
  action,
  pending,
}: {
  state: OrganizationFormState;
  action: (payload: FormData) => void;
  pending: boolean;
}) {
  return (
    <form action={action}>
      <FieldSet>
        <FieldGroup>
          <Field>
            <FieldLabel htmlFor="name">Name</FieldLabel>
            <Input
              id="name"
              name="name"
              type="text"
              placeholder="Org"
              defaultValue={state?.name || ""}
            />
            {state?.errors?.name && (
              <FieldError>{state.errors.name}</FieldError>
            )}
          </Field>
        </FieldGroup>
        <FieldGroup>
          <Field>
            <FieldLabel htmlFor="id">Org ID</FieldLabel>
            <FieldDescription>
              Add a short unique identifier, leave blank to have it
              autogenerated
            </FieldDescription>
            <Input
              id="id"
              name="id"
              type="text"
              placeholder="ORG"
              defaultValue={state?.id || ""}
            />
            {state?.errors?.id && <FieldError>{state.errors.id}</FieldError>}
          </Field>
        </FieldGroup>
        <FieldGroup>
          <Field>
            <Button
              type="submit"
              className="w-full cursor-pointer"
              disabled={pending}
            >
              Create Organization
            </Button>
            {state?.message && <FieldError>{state.message}</FieldError>}
          </Field>
        </FieldGroup>
      </FieldSet>
    </form>
  );
}
